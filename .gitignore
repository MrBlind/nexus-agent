# Nexus Agent - .gitignore

# ==================== Go ====================
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Go workspace file
go.work

# Build artifacts
/services/orchestrator/dist/
/services/orchestrator/bin/

# ==================== Rust ====================
# Generated by Cargo
# will have compiled files and executables
/services/agent-core/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
/services/agent-core/Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# ==================== Python ====================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
/services/llm-service/.venv/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# ==================== Docker ====================
# Docker volumes and compose overrides
docker-compose.override.yml
.dockerignore.local

# ==================== Database ====================
# PostgreSQL
*.sql.backup
/infrastructure/postgres/data/

# Redis
/infrastructure/redis/data/
dump.rdb

# Qdrant
/infrastructure/qdrant/storage/

# ==================== Logs ====================
*.log
logs/
/logs/

# ==================== Configuration ====================
# Environment variables
.env
.env.local
.env.development
.env.staging
.env.production
.env.*.local

# Local configuration files
config.local.yaml
config.dev.yaml
config.*.local.yaml

# Secrets
secrets/
*.key
*.pem
*.crt
certificates/

# ==================== IDE ====================
# VSCode
.vscode/
!.vscode/settings.json.example

# IntelliJ IDEA
.idea/
*.iws
*.iml
*.ipr

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
.\#*

# ==================== OS ====================
# macOS
.DS_Store
.AppleDouble
.LSOverride

# Linux
*~

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# ==================== Monitoring & Observability ====================
# Prometheus data
/infrastructure/prometheus/data/

# Grafana data
/infrastructure/grafana/data/
/infrastructure/grafana/logs/

# Jaeger data
/infrastructure/jaeger/data/

# ==================== Testing ====================
# Test results
test-results/
coverage/
.nyc_output/

# Load testing results
/tests/load/results/

# ==================== Temporary files ====================
tmp/
temp/
*.tmp
*.temp

# ==================== Build artifacts ====================
dist/
build/
out/

# ==================== Package managers ====================
# Node.js (for web frontend)
node_modules/
package-lock.json
yarn.lock

# ==================== Misc ====================
# Backup files
*.bak
*.backup
*.orig

# Local development scripts
run-local.sh
debug.sh
*.local.sh

# Performance profiling
*.prof
*.trace

# Documentation builds
/docs/_build/
/docs/build/
